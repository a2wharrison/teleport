#!groovy
pipeline {
    agent any
    options {
        disableConcurrentBuilds()
        ansiColor(colorMapName: 'XTerm')
    }
    stages {
        stage('Create files/build directory') {
            steps {
                dir('assets/marketplace/files') {
                    sh 'mkdir -p build'
                }
            }
        }
        stage('Run Packer') {
            steps {
                dir('assets/marketplace') {
                    sh 'make oss'
                    stash includes: '**/files/build/oss_build_timestamp.txt', name: 'timestamp'
                }
            }
        }
        stage('Update AMI IDs)') {
            steps {
                dir('assets/marketplace') {
                    unstash 'timestamp'
                    sh 'make update-ami-ids-oss'
                }
            }
        }
       stage('Run Cloudformation and wait for stack') {
            steps {
                dir('assets/marketplace') {
                    sh 'make jenkins-create-stack'
                    sh 'make jenkins-wait-for-stack-creation'
                }
            }
        }
        stage('Wait for Teleport Web UI to come up') {
            steps {
                timeout(5) {
                    waitUntil {
                        script {
                            def r = sh script: 'wget -q https://jenkins-teleport-quickstart-test-stack.gravitational.io/web/login', returnStatus: true
                            return (r == 0);
                        }
                    }
                }
            }
        }
        //stage('Take stack down and wait for destruction') {
        //    steps {
        //        dir('assets/marketplace') {
        //            script {
        //                sh 'make jenkins-test-stop'
        //            }
        //        }
        //    }
        //}
    }
}
